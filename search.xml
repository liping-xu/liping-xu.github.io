<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>iOS组件化学习-01</title>
      <link href="/2019/12/05/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AD%A6%E4%B9%A0-01/"/>
      <url>/2019/12/05/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AD%A6%E4%B9%A0-01/</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言:"></a><strong>前言:</strong></h1><p> 本章开始学习如何进行工程的组件化，主要内容是本地私有库的制作和如何关联远程私有库。并将本地私有pod push 进本地私有库。</p> <a id="more"></a></blockquote><h1 id="组件化的方案："><a href="#组件化的方案：" class="headerlink" title="组件化的方案："></a>组件化的方案：</h1><p>1、蘑菇街的URL方案：</p><p>2、runtime + 命令模式的方案：</p><p>3、协议的方案</p><h1 id="组件化"><a href="#组件化" class="headerlink" title="组件化"></a>组件化</h1><h2 id="什么是组件化："><a href="#什么是组件化：" class="headerlink" title="什么是组件化："></a>什么是组件化：</h2><p>将一个工程分解为各个组件，然后按照某种方式任意组织成为一个拥有完整业务逻辑的工程。</p><h2 id="组件化的优缺点"><a href="#组件化的优缺点" class="headerlink" title="组件化的优缺点"></a>组件化的优缺点</h2><p>优点：1、组件的独立性                     </p><p>​            2、资源重用</p><p>​            3、高效迭代性</p><p>​            4、配合二进制，加快项目的编译速度</p><p>缺点：1、组件的粒度大小</p><p>​            2、区分业务组件以及基础业务组件</p><h2 id="组件划分"><a href="#组件划分" class="headerlink" title="组件划分"></a>组件划分</h2><h3 id="基础组件"><a href="#基础组件" class="headerlink" title="基础组件"></a>基础组件</h3><p>基础配置（宏，常量），分类，网络（AFN，SDW二次封装），工具类（日期时间的处理，文件处理，设备处理）</p><h3 id="功能组件"><a href="#功能组件" class="headerlink" title="功能组件"></a>功能组件</h3><p>控件（弹幕，轮播图，选项卡）；功能（断点续传，音频处理）</p><h3 id="业务组件"><a href="#业务组件" class="headerlink" title="业务组件"></a>业务组件</h3><p>业务线一，业务线二….</p><h1 id="本地库"><a href="#本地库" class="headerlink" title="本地库"></a>本地库</h1><p>利用Cocoapods将我们抽取出的代码模块制作成pod集成到我们的工程。</p><h2 id="pod-引用"><a href="#pod-引用" class="headerlink" title="pod 引用"></a>pod 引用</h2><p>pod install命令引入pod：</p><p>每一个pod里面均有一个Spec文件（描述框架信息文件（框架名称，框架版本号，框架真实源码））。</p><h2 id="执行pod-install"><a href="#执行pod-install" class="headerlink" title="执行pod install"></a>执行pod install</h2><p>​    1、先去找本地的.Spec文件。</p><p>​    2、如果没有，再去远程仓库将.Spec文件拉到本地，在执行1.</p><h2 id="本地-Spec的文件："><a href="#本地-Spec的文件：" class="headerlink" title="本地.Spec的文件："></a>本地.Spec的文件：</h2><p>​    pod setup将远程仓库的Spec文件拉到本地。</p><h1 id="创建本地私有库"><a href="#创建本地私有库" class="headerlink" title="创建本地私有库"></a>创建本地私有库</h1><h2 id="使用命令"><a href="#使用命令" class="headerlink" title="使用命令"></a>使用命令</h2><blockquote><p>终端: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd &lt;想要创建位置的文件夹&gt;</span></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">pod spec create &lt;本地库名字&gt; </span></pre></td></tr></table></figure></blockquote><p>以上这种方式不推荐，因为部分s.source_files文件内容等需要自己填写，Classes，FILE_LICENSE等文件需要自己创建。太麻烦，弃用。</p><blockquote><p>终端:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">pod lib create &lt;本地库名字&gt;</span></pre></td></tr></table></figure></blockquote><p>回答相应的问题即可。生成的文件如下:</p><p><img src="/2019/12/05/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AD%A6%E4%B9%A0-01/WX20191205-163627@2x.png" alt="WX20191205-163627@2x"></p><p><img src="/2019/12/05/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AD%A6%E4%B9%A0-01/WX20191205-163816@2x.png" alt="WX20191205-163627@2x"></p><p>至此：本地私有库搭建完成。</p><h1 id="创建并设置一个私有的Spec-Repo"><a href="#创建并设置一个私有的Spec-Repo" class="headerlink" title="创建并设置一个私有的Spec Repo"></a>创建并设置一个私有的Spec Repo</h1><h2 id="什么是Spec-Repo？"><a href="#什么是Spec-Repo？" class="headerlink" title="什么是Spec Repo？"></a>什么是Spec Repo？</h2><p>它是所有的Pods的一个索引，一个容器，所有的公开的Pods都在这个里面，它实际是一个Git仓库remote端在GitHub上，当你使用Cocoapods后它会被clone到本地的~/.cocoapods/repos目录下，可以进入这个目录看到master文件夹就试这个官方的Spec Repo了，这个master目录结构是这个样子的</p><blockquote><p>├── Specs<br>└── [SPEC_NAME]<br>└── [VERSION]<br>└── [SPEC_NAME].podspec</p></blockquote><h2 id="创建本地索引库"><a href="#创建本地索引库" class="headerlink" title="创建本地索引库"></a>创建本地索引库</h2><p>1、首先我们在GitHub上创建一个自己的仓库（repository Name）</p><p>2、在本地创建Spec Repo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">#pod repo add [Private Repo Name] [对应的.git URL]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$pod repo add xlp_test https:&#x2F;&#x2F;github.com&#x2F;liping-xu&#x2F;xlp_test.git</span></pre></td></tr></table></figure><p>进~/.cocoapods/repos目录就能看见我们自己的pod仓库了。至此第一步创建私有Spec Repo完成。</p><p><img src="/2019/12/05/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AD%A6%E4%B9%A0-01/WX20191212-110154@2x.png" alt="WX20191212-110154@2x"></p><p>执行 pod repo list查看repo列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ pod repo list</span></pre></td></tr></table></figure><p><img src="/2019/12/05/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AD%A6%E4%B9%A0-01/WX20191212-110421@2x.png" alt="WX20191212-110421@2x"></p><p> PS:如果有其他合作人员共同使用这个私有Spec Repo的话在他有对应Git仓库的权限的前提执行相同的命令添加这个Spec Repo即可</p><h2 id="编辑Pod文件夹"><a href="#编辑Pod文件夹" class="headerlink" title="编辑Pod文件夹"></a>编辑Pod文件夹</h2><p>向Pod文件夹中添加库文件和资源，并配置podspec文件。</p><h3 id="添加代码和图片等资源文件"><a href="#添加代码和图片等资源文件" class="headerlink" title="添加代码和图片等资源文件"></a>添加代码和图片等资源文件</h3><p>在上面那张生成Lib的图里面可以看见放置代码和图片的位置，</p><p>在pod/Classes中添加代码，在pod/Assets里面添加图片。然后进入终端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$cd Example</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$pod update</span></pre></td></tr></table></figure><p>再打开项目工程就可以看见刚添加的文件了。</p><p>注：这里需要注意是的每当你向Pod添加了新的文件或者以后更新了podspec的版本都需要重新执行pod update命令。</p><p>测试无误后将项目添加并推送到远端仓库，并编辑podspec文件</p><h3 id="编辑podspec文件"><a href="#编辑podspec文件" class="headerlink" title="编辑podspec文件"></a>编辑podspec文件</h3><p>首先通过Cocoapods创建出来的目录本身就在本地的Git管理下，我们需要做的就是将它添加到远端仓库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd &lt;lib文件夹&gt;</span></pre></td></tr></table></figure><p>git提交相应的代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ git add .</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ git commit -s -m &quot;初始化library&quot;</span></pre></td></tr></table></figure><p>git 添加远端仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># git remote add origin &lt;.git URL&gt; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ git remote add origin https:&#x2F;&#x2F;github.com&#x2F;liping-xu&#x2F;tool_test.git</span></pre></td></tr></table></figure><p>git 推送到远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ git push origin master</span></pre></td></tr></table></figure><p>因为podspec文件中获取git版本控制的项目需要tag号，所以需要打个tag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ git tag -m &quot;第一次提交&quot; &quot;0.1.0&quot;</span></pre></td></tr></table></figure><p>推送tag到远端仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ git push --tags</span></pre></td></tr></table></figure><p>打开lib文件中的例子工程Example/tools_test.xworkspace，编辑tools_test.podspec文件</p><p><img src="/2019/12/05/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AD%A6%E4%B9%A0-01/WX20191212-204611@2x.png" alt="WX20191212-204611@2x"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">s.name             &#x3D; &#39;tools_test &#39; ##名字必须与libname相同</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">s.version          &#x3D; &#39;0.1.0&#39;     #版本必须为0.0.0格式</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">s.summary          &#x3D; ’这是测试库‘ #关于库的一个简短的描述</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">s.description      &#x3D; &lt;&lt;-DESC</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">TODO: 备注文字(较长描述)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">                            DESC</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">#是否支持arc</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">s.requires_arc &#x3D; true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">#文件主页</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">s.homepage         &#x3D; &#39;https:&#x2F;&#x2F;github.com&#x2F;liping-xu&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">#开源协议</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">s.license          &#x3D; &#123; :type &#x3D;&gt; &#39;MIT&#39;, :file &#x3D;&gt; &#39;LICENSE&#39; &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">#作者信息</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">s.author           &#x3D; &#123; &#39;Maoyis&#39; &#x3D;&gt; &#39;xxxxxx@qq.com&#39; &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">#源文件所在网络路径</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">s.source           &#x3D; &#123; :git &#x3D;&gt; &#39;https:&#x2F;&#x2F;github.com&#x2F;liping-xu&#x2F;tools_test.git&#39;, :tag &#x3D;&gt; s.version.to_s &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">#支持版本</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">s.ios.deployment_target &#x3D; &#39;7.0&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">#公开头文件名</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">s.public_header_files &#x3D; &#39;Pod&#x2F;Classes&#x2F;**&#x2F;*.h&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">#依赖的框架</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">s.frameworks &#x3D; &#39;UIKit&#39;, &#39;MapKit&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">#依赖库</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">s.dependency &#39;AFNetworking&#39;, &#39;~&gt; 2.3&#39;</span></pre></td></tr></table></figure><p>以上.podspec文件最重要的三个地方要填写正确</p><p>这个是资源地址：放置你的源码和资源文件的地方</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">s.source           &#x3D; &#123; :git &#x3D;&gt; &#39;https:&#x2F;&#x2F;github.com&#x2F;liping-xu&#x2F;tools_test.git&#39;, :tag &#x3D;&gt; s.version.to_s &#125;</span></pre></td></tr></table></figure><p>这个是主页地址：如果是私有库的话可以填写自己的github主页地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">s.homepage         &#x3D; &#39;https:&#x2F;&#x2F;github.com&#x2F;liping-xu&#39;</span></pre></td></tr></table></figure><p>这个是tag值，在git里面打的tag值必须和podspec文件里面的一致，否则报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">s.version          &#x3D; &#39;0.1.0&#39;     #版本必须为0.0.0格式</span></pre></td></tr></table></figure><p>到此检查一下你的本地和远程pod是否正确，在终端里面输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ pod spec lint</span></pre></td></tr></table></figure><p><img src="/2019/12/05/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AD%A6%E4%B9%A0-01/WX20191212-214537@2x.png" alt="WX20191212-214537@2x"></p><p>这样表示验证通过。</p><p>ps：这里指令有两种</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ pod lib lint</span></pre></td></tr></table></figure><p>上面这种写法表示只验证本地库中的pod是否正确</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ pod spec lint</span></pre></td></tr></table></figure><p>上面这种写法表示从本地库和远程库两个方面去验证pod是否正确。</p><h3 id="将lib-podsepc文件提交本地索引库"><a href="#将lib-podsepc文件提交本地索引库" class="headerlink" title="将lib.podsepc文件提交本地索引库"></a>将lib.podsepc文件提交本地索引库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ pod repo push &lt;本地仓库名称&gt; &lt;本地pod名称&gt;.podspec</span></pre></td></tr></table></figure><h1 id="清坑"><a href="#清坑" class="headerlink" title="清坑"></a>清坑</h1><p>这里有些坑需要理一下。</p><p>首先在创建私有库，在终端pod repo add的时候创建远程仓库时候</p><p><img src="/2019/12/05/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AD%A6%E4%B9%A0-01/WX20191212-202203@2x.png" alt="WX20191212-202203@2x"></p><p>这个要点上，不然远程仓库没有master分支，导致后面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ pod repo push &lt;本地仓库名&gt; &lt;创建的pod名&gt;.podspec</span></pre></td></tr></table></figure><p>失败。原因就在于没有master分支。</p><p><img src="/2019/12/05/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AD%A6%E4%B9%A0-01/WX20191212-202911@2x.png" alt="WX20191212-202911@2x"></p><p>这样就导致push失败。如下图所示:</p><p><img src="/2019/12/05/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AD%A6%E4%B9%A0-01/WX20191212-215048@2x.png" alt="WX20191212-215048@2x"></p><p>至此，本地库与远程库关联并且搭建完成。</p>]]></content>
      
      
      <categories>
          
          <category> iOS组件化相关 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>个人博客说明</title>
      <link href="/2019/12/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AF%B4%E6%98%8E/"/>
      <url>/2019/12/05/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言:"></a><strong>前言:</strong></h1><p> 本人其实不太喜欢写博客，是因为一些工作原因吧，导致之前工作很多代码并不能发表在博客上面。后来自己打算出去找工作的时候，稍微牛逼一点的公司都需要提供自己的博客地址，而我没有，有些难点和做的笔记都写在有道笔记上面了，结果有道笔记坏了，之前的记录全没，有次面试的时候给人家看了一空白页，所以一生气之下就搭建了这个个人博客。</p> <a id="more"></a></blockquote><p>搭建的过程就不多说了，网上随便找个教程跟着搭建就完事了，主要是记录自己的技术等经历。</p>]]></content>
      
      
      <categories>
          
          <category> 个人博客搭建原因 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
